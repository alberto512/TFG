type Mutation {
  login(username: String!, password: String!): String!
  refreshToken(token: String!): String!
  createUser(username: String!, password: String!, role: Role!): User!
  updatePassword(id: ID!, password: String!): User!
  deleteUser(id: ID!): String!
  createCategory(name: String!): Category!
  deleteCategory(id: ID!): String!
  updateTransaction(id: ID!, category: ID!): String!
  refreshBankData: String!
}

type Query {
  users: [User!]!
  userById(id: ID!): User!
  userByToken: User!
  accounts: [Account!]!
  accountById(id: ID!): Account!
  transactions: [Transaction!]!
  transactionById(id: ID!): Transaction!
  transactionsByDate(initDate: Int!, endDate: Int!): [Transaction!]!
  transactionsByCategory(category: String!): [Transaction!]!
  categories: [Category!]!
  balances(
    accountIds: [ID!]!
    categoryIds: [ID!]!
    initDate: Int!
    endDate: Int!
  ): [Balance!]!
  tokenWithCode(code: String!): String!
}

enum Role {
  ADMIN
  USER
}

type User {
  id: ID!
  username: String!
  password: String!
  role: Role!
  accounts: [Account!]!
  transactions: [Transaction!]!
}

type Account {
  id: ID!
  iban: String!
  name: String!
  currency: String!
  amount: Float!
  bank: String!
  user: User!
  transactions: [Transaction!]!
}

type Transaction {
  id: ID!
  description: String!
  date: Int!
  amount: Float!
  category: Category!
  user: User!
  account: Account!
}

type Category {
  id: ID!
  name: String!
}

type Balance {
  amount: Float!
  category: Category!
}
